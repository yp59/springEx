<?xml version="1.0" encoding="UTF-8"?>

<!-- 
web.xml : 서버가 알아둬야 할 이 프로젝트의 운영 방침 설정
웹 모듈 4.0에 맞게 버전 변경

 -->
<web-app version="4.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_4_0.xsd">

	<!-- 전역
	설정 파일 정보 등록 
	스프링의 모든 요소에서 접근 가능한 설정
	화면과 관계 없는 설정들을 보관하는 파일(요청)
	param-name은 반드시 contextConfigLocation 이어야 한다.
	param-value에는 설정 파일의 위치를 적으며,여러개 작성 가능
	-->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
	</context-param>
	
	<!--
	프로젝트에 존재하는 여러 개의 설정파일들을 상호 연결해주는 도구 등록
	root-context가 servlet-context보다 상위 설정파일이다
	servlet-context에서는 root-context의 내용을 이용할 수 있다.
	반대는 안된다. 상위개념이 존재
	 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- 스프링에서 가장 중요한 설정
	스프링은 중앙에서 모든 것을 통제하는 서블릿이 한 개 존재한다.
	이름 : DispatcherServlet 
	아래 설정을 통해 프로젝트가 구동될 때 dispatcherservlet이 실행되도록 만든다.
	servlet에는 서블릿 등록 정보를 작성
	servlet-name은 서블릿의 이름(주소 연결 시 사용)
	servlet-class는 서블릿의 실제 경로
	init-param 은 시작 시 알아야 할 설정 내용
	dispatcheraServlet이 구동하기 위해서 알아야하는 설정파일을 등록
	param-name은 반드시 contextConfigLocation 이어야 한다.
	param-value에는 설정파일의 위치를 등록
	load-on-startup은 서버 실행시 시작 우선순위 설정
	servlet-mapping에는 서블릿에  할당할 주소를 설정
	url-pattern에 /*로 작성하는 것과/로 작성하는 것은 차이가 있다.
	/*는 전체 주소를 의미(특정 주소를 제외할 수 없음 무조건 전체)
	/는 전체 주소를 의미(설정을 통해 특정 주소를 제외할 수 있음)
	
	-->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
		
	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

</web-app>
