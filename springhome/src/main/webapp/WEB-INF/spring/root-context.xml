<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- 
	데이터 베이스 관련 도구 등록
	1.데이터베이스 연결 도구
		(1)DriverManagerDataSource 일반 연결 도구
			-driver,name,password
		(2)BasicDataSource : DBCP 연결 도구
			-연결정보  + 최대 /여유/ 대기 시간을 설정
	2.데이터베이스 명령 처리 도구
		-JdbcTemplate
	 -->
		
	<bean id="dataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
	<property name="url" value ="jdbc:oracle:thin:@localhost:1521:xe"></property>
	<property name="username" value="study"></property>
	<property name="password" value="study"></property>
	</bean>	
		
	<bean id = "dbcpSource" class = "org.apache.commons.dbcp2.BasicDataSource">
	<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
	<property name="url" value ="jdbc:oracle:thin:@localhost:1521:xe"></property>
	<property name="username" value="study"></property>
	<property name="password" value="study"></property>
	
	<property name="maxTotal" value="20"></property>
	<property name="maxIdle" value = "10"></property>
	<property name="maxWaitMillis" value="3000"></property>
	</bean>
	
	<!-- Db로 처리할 명령어를 선택하는 구문 -->
	<bean id="jdbcTemplate" class = "org.springframework.jdbc.core.JdbcTemplate">
	<property name="dataSource" ref="dbcpSource"></property>
	</bean>	
	
	<!-- 
		마이바티스 도구 등록
		- SqlSessionFactoryBean : 스프링 연동을 위한 SqlSessionFactory 생성 클래스
			- dataSource : 데이터베이스 연결 객체 참조 설정
			- configLocation : 마이바티스 환경설정파일 위치 설정
				- Spring은 mybatis와 다르게 classpath, filepath가 나눠져 있음에 주의
			- mapperLocations : 마이바티스 매퍼 파일 위치를 패턴으로 설정
		- SqlSessionTemplate : 스프링 연동을 위한 SqlSession 생성 클래스
	  
	 -->
	<bean id="factory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dbcpSource"></property>
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/mybatis/mapper/**/*-mapper.xml"></property>
	</bean>
	
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="factory"></constructor-arg>
	</bean>
	
	
	<!-- 
		root-context 에서는 다음과 같이 컴포넌트 스캐닝을 실시한다.
		= servlet-context에서 등록한 @Controller 제외 전부 스캔하여 등록
		= @Repository , @Service , @Component 등이 등록
	 -->
	<context:component-scan base-package="com.kh.home">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
</beans>
