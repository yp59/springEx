<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	매퍼 파일은 SQL 구문을 보관하는 파일을 말하며 일반적으로 "테이블당 1개" 만든다.
	- namespace : 여러 개의 매퍼 중에 현재 매퍼를 식별하도록 지어주는 고유한 명칭(필수)
 -->
<mapper namespace="item">
	
	<!-- 
		구문 생성 : 종류에 맞는 구문을 해당 태그로 작성
		- id : 외부에서 구문을 실행하기 위해 알아야 할 구문의 고유 식별값 
		- parameterType : 외부에서 전달되는 데이터의 타입
		- resultType : 조회 결과 형태(오로지 select에서만 사용가능)
			- 목록이나 단일항목 모두 DTO로 취급한다
	 -->
	<insert id="insert">
		insert into item values(
			item_seq.nextval, '피자10판', 50000
		)
	</insert>
	
	<!-- 
		mybatis는 파라미터를 ?가 아니라 #{이름} 형태로 설정
		순서 상관없이 오직 이름으로 검색한 데이터를 채운다
	 -->
	<insert id="insert2">
		insert into item values(
			item_seq.nextval, #{itemName}, #{itemPrice}
		)
	</insert>
	
<!-- 	<insert id="insert3" parameterType="com.kh.spring09.entity.ItemDto"> -->
	<insert id="insert3" parameterType="ItemDto">
		insert into item values(
			item_seq.nextval, #{itemName}, #{itemPrice}
		)
	</insert>
	
<!-- 	<insert id="insert4" parameterType="java.util.Map"> -->
	<insert id="insert4" parameterType="map">
		insert into item values(
			item_seq.nextval, #{itemName}, #{itemPrice}
		)
	</insert>
	
	
	<select id="select1" resultType="ItemDto">
		select * from item
	</select>
	
<!-- 	<select id="select2" resultType="ItemDto" parameterType="java.lang.String"> -->
<!-- 	<select id="select2" resultType="ItemDto" parameterType="string"> -->
	<select id="select2" resultType="ItemDto" parameterType="map">
		select * from item where item_name = #{itemName}
	</select>
	
	<!-- 
		mybatis에는 2종류의 바인딩이 존재
		1. 정적 바인딩 : 있는 그대로의 데이터를 추가적인 처리 없이 구문에 할당(항목)
		2. 동적 바인딩 : 데이터를 형태에 맞게 해석하여 따옴표 등을 처리한 뒤 구문에 할당(데이터)
	 -->
	
	<select id="select3" resultType="ItemDto" parameterType="map">
		select * from item where ${type} = #{keyword}
	</select>
	
	<select id="select4" resultType="ItemDto" parameterType="int">
		select * from item where item_no = #{itemNo}
	</select>
	
	<update id="update1" parameterType="ItemDto">
		update item
		set 
			item_name = #{itemName},
			item_price = #{itemPrice}
		where
			item_no = #{itemNo}
	</update>
	
	<delete id="delete1" parameterType="int">
		delete item where item_no = #{itemNo}
	</delete>
	
</mapper>
